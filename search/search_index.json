{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"BoMI Body Machine Interface (BoMI) is a GUI application written in Python 3.10 with Qt6. Installation 1. Create a virtual environment with Conda. This application requires Python>=3.10 , hence we're going to use conda to install a compatible version of Python. On Windows , use the Anaconda Powershell Prompt . If you don't have Anaconda or Miniconda installed, I recommend Miniconda . $ conda create -y -n bomi python==3.10 2. Activate the conda environment. After this, you should see (bomi) in front of your command line prompt. $ conda activate bomi # (bomi) $$ 3. Clone the git repo. Git with SSH is recommended . # (bomi) $$ git clone git@github.com:SeanezLab/BoMI-py.git 4. Install the packages with pip. This installs 3 packages: bomi , threespace_api and trigno_sdk . On Windows: # (bomi) $$ cd BoMI-py # (bomi) $$ python -m pip install . On MacOS and Linux: # (bomi) $$ cd BoMI-py # (bomi) $$ python3 -m pip install . 5. Start BoMI To test the installation of BoMI-py try bomi and the main window should open. # (bomi) $$ bomi External Sensor Interface The Yost 3-Space Python API is included in the source code and has been modified for compatibility with Python>=3.8. The Delsys Trigno Control Utility (Delsys SDK Server) must be running on a computer connected to the Delsys base station for the EMG part to work. The trigno_sdk package implements a client to the Delsys SDK, which communicates over TCP. Refer to the Trigno SDK User's Guide document to learn more about its internals.","title":"BoMI"},{"location":"#bomi","text":"Body Machine Interface (BoMI) is a GUI application written in Python 3.10 with Qt6.","title":"BoMI"},{"location":"#installation","text":"","title":"Installation"},{"location":"#1-create-a-virtual-environment-with-conda","text":"This application requires Python>=3.10 , hence we're going to use conda to install a compatible version of Python. On Windows , use the Anaconda Powershell Prompt . If you don't have Anaconda or Miniconda installed, I recommend Miniconda . $ conda create -y -n bomi python==3.10","title":"1. Create a virtual environment with Conda."},{"location":"#2-activate-the-conda-environment","text":"After this, you should see (bomi) in front of your command line prompt. $ conda activate bomi # (bomi) $$","title":"2. Activate the conda environment."},{"location":"#3-clone-the-git-repo","text":"Git with SSH is recommended . # (bomi) $$ git clone git@github.com:SeanezLab/BoMI-py.git","title":"3. Clone the git repo."},{"location":"#4-install-the-packages-with-pip","text":"This installs 3 packages: bomi , threespace_api and trigno_sdk . On Windows: # (bomi) $$ cd BoMI-py # (bomi) $$ python -m pip install . On MacOS and Linux: # (bomi) $$ cd BoMI-py # (bomi) $$ python3 -m pip install .","title":"4. Install the packages with pip."},{"location":"#5-start-bomi","text":"To test the installation of BoMI-py try bomi and the main window should open. # (bomi) $$ bomi","title":"5. Start BoMI"},{"location":"#external-sensor-interface","text":"The Yost 3-Space Python API is included in the source code and has been modified for compatibility with Python>=3.8. The Delsys Trigno Control Utility (Delsys SDK Server) must be running on a computer connected to the Delsys base station for the EMG part to work. The trigno_sdk package implements a client to the Delsys SDK, which communicates over TCP. Refer to the Trigno SDK User's Guide document to learn more about its internals.","title":"External Sensor Interface"},{"location":"start-react/","text":"Running a StartReact Experiment Start BoMI by activating the conda environment where you installed BoMI-py , then running bomi in your terminal. $ conda activate bomi # (bomi) $$ bomi The BoMI window will open. The home screen is divided into Group Boxes, grouped by functionality. Yost Device Manager Trigno Device Manager StartReact Cursor Tasks Cursor Control","title":"Running a StartReact Experiment"},{"location":"start-react/#running-a-startreact-experiment","text":"Start BoMI by activating the conda environment where you installed BoMI-py , then running bomi in your terminal. $ conda activate bomi # (bomi) $$ bomi The BoMI window will open. The home screen is divided into Group Boxes, grouped by functionality. Yost Device Manager Trigno Device Manager StartReact Cursor Tasks Cursor Control","title":"Running a StartReact Experiment"}]}