{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"BoMI Body Machine Interface (BoMI) is a GUI application for the control of a computer cursor with wearable body sensors. BoMI also implements the StartReact experiments to study spinal cord injury. Getting Started Install BoMI Overview of the BoMI GUI","title":"BoMI"},{"location":"#getting-started","text":"Install BoMI Overview of the BoMI GUI","title":"Getting Started"},{"location":"develop/","text":"External Sensor Interface The Yost 3-Space Python API is included in the source code and has been modified for compatibility with Python>=3.8. The Delsys Trigno Control Utility (Delsys SDK Server) must be running on a computer connected to the Delsys base station for the EMG part to work. The trigno_sdk package implements a client to the Delsys SDK, which communicates over TCP. Refer to the Trigno SDK User's Guide document to learn more about its internals.","title":"Develop"},{"location":"develop/#external-sensor-interface","text":"The Yost 3-Space Python API is included in the source code and has been modified for compatibility with Python>=3.8. The Delsys Trigno Control Utility (Delsys SDK Server) must be running on a computer connected to the Delsys base station for the EMG part to work. The trigno_sdk package implements a client to the Delsys SDK, which communicates over TCP. Refer to the Trigno SDK User's Guide document to learn more about its internals.","title":"External Sensor Interface"},{"location":"install/","text":"Install BoMI 1. Create a virtual environment with Conda. This application requires Python>=3.10 , hence we're going to use conda to install a compatible version of Python. On Windows , use the Anaconda Powershell Prompt . If you don't have Anaconda or Miniconda installed, I recommend Miniconda . $ conda create -y -n bomi python==3.10 2. Activate the conda environment. After this, you should see (bomi) in front of your command line prompt. $ conda activate bomi # (bomi) $$ 3. Clone the git repo. Git with SSH is recommended . # (bomi) $$ git clone git@github.com:SeanezLab/BoMI-py.git 4. Install the packages with pip. This installs 3 packages: bomi , threespace_api and trigno_sdk . On Windows: # (bomi) $$ cd BoMI-py # (bomi) $$ python -m pip install . On MacOS and Linux: # (bomi) $$ cd BoMI-py # (bomi) $$ python3 -m pip install . 5. Start BoMI To test the installation of BoMI-py, run the command bomi . # (bomi) $$ bomi The BoMI window will open.","title":"Install"},{"location":"install/#install-bomi","text":"","title":"Install BoMI"},{"location":"install/#1-create-a-virtual-environment-with-conda","text":"This application requires Python>=3.10 , hence we're going to use conda to install a compatible version of Python. On Windows , use the Anaconda Powershell Prompt . If you don't have Anaconda or Miniconda installed, I recommend Miniconda . $ conda create -y -n bomi python==3.10","title":"1. Create a virtual environment with Conda."},{"location":"install/#2-activate-the-conda-environment","text":"After this, you should see (bomi) in front of your command line prompt. $ conda activate bomi # (bomi) $$","title":"2. Activate the conda environment."},{"location":"install/#3-clone-the-git-repo","text":"Git with SSH is recommended . # (bomi) $$ git clone git@github.com:SeanezLab/BoMI-py.git","title":"3. Clone the git repo."},{"location":"install/#4-install-the-packages-with-pip","text":"This installs 3 packages: bomi , threespace_api and trigno_sdk . On Windows: # (bomi) $$ cd BoMI-py # (bomi) $$ python -m pip install . On MacOS and Linux: # (bomi) $$ cd BoMI-py # (bomi) $$ python3 -m pip install .","title":"4. Install the packages with pip."},{"location":"install/#5-start-bomi","text":"To test the installation of BoMI-py, run the command bomi . # (bomi) $$ bomi The BoMI window will open.","title":"5. Start BoMI"},{"location":"overview/","text":"Overview of the BoMI GUI The home screen is divided into Group Boxes, grouped by functionality. Yost Device Manager The Yost Device Manager manages the Yost 3-Space Sensors , which provides BoMI with real-time orientation data. Plug the sensors or dongles via USB to the computer, then click \" Discover Devices \" to see a list of devices. \" Tare Devices \" tares all wired and wireless sensors. \" Data Charts \" brings up a scope that visualizes orientation data from all connected sensors. Certain columns of the table showing the list of devices are editable: Nicknames: set a custom name to the devices (e.g., knee, ankle) that will be shown in the scope and in the saved data. Channel: wireless channel of the Yost sensor. Only editable when a wireless sensors is connected through USB. Pan ID: wireless pan ID of the Yost sensor. Only editable when a wireless sensors is connected through USB. (For a sensor and dongle to pair, they must be using the same Channel and Pan ID . It's easier to set this through the 3-Space Sensor Suite GUI ). \" Commit all settings \" commits the edited settings to device. (Nickname is only saved during a BoMI session and not persisted to device) \" Disconnect All \" disconnects from all devices and dongles. Trigno Device Manager The Trigno Device Manager manages the Trigno Research System from Delsys. Make sure the Trigno Control Utility (Trigno SDK Server) is running on the computer connected to the Base Station, and the IP address of the computer is entered correctly, then click \" Connect \" to connect to the Base Station. Use the sensor widgets to assign a muscle to each sensor before collecting data. StartReact Cursor Tasks Cursor Control","title":"Overview"},{"location":"overview/#overview-of-the-bomi-gui","text":"The home screen is divided into Group Boxes, grouped by functionality.","title":"Overview of the BoMI GUI"},{"location":"overview/#yost-device-manager","text":"The Yost Device Manager manages the Yost 3-Space Sensors , which provides BoMI with real-time orientation data. Plug the sensors or dongles via USB to the computer, then click \" Discover Devices \" to see a list of devices. \" Tare Devices \" tares all wired and wireless sensors. \" Data Charts \" brings up a scope that visualizes orientation data from all connected sensors. Certain columns of the table showing the list of devices are editable: Nicknames: set a custom name to the devices (e.g., knee, ankle) that will be shown in the scope and in the saved data. Channel: wireless channel of the Yost sensor. Only editable when a wireless sensors is connected through USB. Pan ID: wireless pan ID of the Yost sensor. Only editable when a wireless sensors is connected through USB. (For a sensor and dongle to pair, they must be using the same Channel and Pan ID . It's easier to set this through the 3-Space Sensor Suite GUI ). \" Commit all settings \" commits the edited settings to device. (Nickname is only saved during a BoMI session and not persisted to device) \" Disconnect All \" disconnects from all devices and dongles.","title":"Yost Device Manager"},{"location":"overview/#trigno-device-manager","text":"The Trigno Device Manager manages the Trigno Research System from Delsys. Make sure the Trigno Control Utility (Trigno SDK Server) is running on the computer connected to the Base Station, and the IP address of the computer is entered correctly, then click \" Connect \" to connect to the Base Station. Use the sensor widgets to assign a muscle to each sensor before collecting data.","title":"Trigno Device Manager"},{"location":"overview/#startreact","text":"","title":"StartReact"},{"location":"overview/#cursor-tasks","text":"","title":"Cursor Tasks"},{"location":"overview/#cursor-control","text":"","title":"Cursor Control"},{"location":"start-react/","text":"Running a StartReact Experiment Start BoMI by activating the conda environment where you installed BoMI-py , then running bomi in your terminal. $ conda activate bomi # (bomi) $$ bomi The BoMI window will open.","title":"StartReact"},{"location":"start-react/#running-a-startreact-experiment","text":"Start BoMI by activating the conda environment where you installed BoMI-py , then running bomi in your terminal. $ conda activate bomi # (bomi) $$ bomi The BoMI window will open.","title":"Running a StartReact Experiment"}]}